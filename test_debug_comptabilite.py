# Test diagnostic √©critures comptables
import sqlite3
import sys
import os

# Ajouter le r√©pertoire parent au path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

print("=== DIAGNOSTIC √âCRITURES COMPTABLES ===\n")

try:
    from ayanna_erp.database.database_manager import DatabaseManager
    from sqlalchemy import text
    
    db_manager = DatabaseManager()
    
    with db_manager.get_session() as session:
        
        # 1. V√©rifier si les tables comptables existent
        print("1. V√©rification des tables comptables...")
        
        tables_comptables = [
            'compta_config',
            'compta_journaux', 
            'compta_ecritures',
            'compta_comptes'
        ]
        
        for table in tables_comptables:
            try:
                result = session.execute(text(f"SELECT COUNT(*) FROM {table}"))
                count = result.fetchone()[0]
                print(f"‚úÖ Table {table}: {count} enregistrements")
            except Exception as e:
                print(f"‚ùå Table {table}: {e}")
        
        # 2. V√©rifier la configuration comptable
        print("\n2. V√©rification configuration comptable...")
        
        try:
            result = session.execute(text("""
                SELECT enterprise_id, compte_achat_id, compte_vente_id, compte_caisse_id
                FROM compta_config
            """))
            configs = result.fetchall()
            
            if configs:
                for config in configs:
                    print(f"‚úÖ Config trouv√©e - Entreprise: {config[0]}, Achat: {config[1]}, Vente: {config[2]}, Caisse: {config[3]}")
            else:
                print("‚ùå AUCUNE CONFIGURATION COMPTABLE TROUV√âE!")
                print("   ‚Üí C'est probablement pourquoi les √©critures ne sont pas cr√©√©es")
                
        except Exception as e:
            print(f"‚ùå Erreur config comptable: {e}")
        
        # 3. V√©rifier les journaux comptables existants
        print("\n3. V√©rification journaux comptables...")
        
        try:
            result = session.execute(text("""
                SELECT COUNT(*) FROM compta_journaux 
                WHERE type_operation = 'sortie' AND libelle LIKE '%Achat%'
            """))
            count = result.fetchone()[0]
            print(f"‚úÖ Journaux d'achat trouv√©s: {count}")
            
            # Afficher les derniers journaux
            result = session.execute(text("""
                SELECT id, date_operation, libelle, montant, reference
                FROM compta_journaux 
                ORDER BY id DESC LIMIT 5
            """))
            journaux = result.fetchall()
            
            if journaux:
                print("   Derniers journaux:")
                for j in journaux:
                    print(f"     ID:{j[0]} - {j[1]} - {j[2]} - {j[3]}‚Ç¨ - Ref:{j[4]}")
            else:
                print("   Aucun journal trouv√©")
                
        except Exception as e:
            print(f"‚ùå Erreur journaux: {e}")
        
        # 4. V√©rifier les √©critures comptables
        print("\n4. V√©rification √©critures comptables...")
        
        try:
            result = session.execute(text("SELECT COUNT(*) FROM compta_ecritures"))
            count = result.fetchone()[0]
            print(f"‚úÖ Total √©critures: {count}")
            
        except Exception as e:
            print(f"‚ùå Erreur √©critures: {e}")
        
        # 5. V√©rifier les comptes comptables
        print("\n5. V√©rification comptes comptables...")
        
        try:
            result = session.execute(text("""
                SELECT numero, nom, libelle
                FROM compta_comptes 
                WHERE numero LIKE '6%' OR numero LIKE '4%' OR numero LIKE '5%'
                ORDER BY numero
            """))
            comptes = result.fetchall()
            
            if comptes:
                print("‚úÖ Comptes comptables trouv√©s:")
                for c in comptes:
                    print(f"     {c[0]} - {c[1]} - {c[2]}")
            else:
                print("‚ùå AUCUN COMPTE COMPTABLE TROUV√â!")
                print("   ‚Üí Les comptes doivent √™tre configur√©s avant les achats")
                
        except Exception as e:
            print(f"‚ùå Erreur comptes: {e}")
            
    print("\n" + "="*60)
    print("DIAGNOSTIC TERMIN√â")
    print("="*60)
    
    print("\nüí° RECOMMANDATIONS:")
    print("  1. V√©rifier que compta_config est configur√© pour l'entreprise")
    print("  2. V√©rifier que les comptes comptables existent (classe 6, 4, 5)")
    print("  3. Regarder les logs lors des achats pour voir les erreurs")
    
except Exception as e:
    print(f"‚ùå Erreur g√©n√©rale: {e}")
    import traceback
    traceback.print_exc()