#!/usr/bin/env python3
"""
Test de cr√©ation d'un compte apr√®s suppression de enterprise_id
"""
import sys
sys.path.insert(0, '.')

from ayanna_erp.modules.comptabilite.controller.comptabilite_controller import ComptabiliteController

print("üîç Test de cr√©ation d'un compte sans enterprise_id...")

try:
    from ayanna_erp.database.database_manager import DatabaseManager
    
    db_manager = DatabaseManager()
    session = db_manager.get_session()
    
    # R√©cup√©rer une classe comptable existante
    from ayanna_erp.modules.comptabilite.model.comptabilite import ComptaClasses, ComptaComptes
    classe = session.query(ComptaClasses).first()
    
    if not classe:
        print("‚ùå Aucune classe comptable trouv√©e")
        exit()
    
    print(f"‚úÖ Classe trouv√©e: {classe.code} - {classe.nom}")
    
    # Donn√©es du nouveau compte
    data = {
        "numero": "5002",
        "nom": "Caisse Point de Vente",
        "libelle": "Caisse pour point de vente principal",
        "classe_comptable_id": classe.id
    }
    
    # Cr√©er le compte directement
    compte = ComptaComptes(
        numero=data["numero"],
        nom=data["nom"],
        libelle=data["libelle"],
        classe_comptable_id=data["classe_comptable_id"]
    )
    session.add(compte)
    session.commit()
    compte_id = compte.id
    print(f"‚úÖ Compte cr√©√© avec succ√®s! ID: {compte_id}")
    
    # V√©rifier que le compte a √©t√© cr√©√©
    compte_verifie = session.query(ComptaComptes).filter_by(id=compte_id).first()
    
    if compte_verifie:
        print(f"‚úÖ V√©rification: Compte {compte_verifie.numero} - {compte_verifie.nom}")
        print(f"‚úÖ Classe comptable: {compte_verifie.classe_comptable.code} - {compte_verifie.classe_comptable.nom}")
        print(f"‚úÖ Enterprise ID via relation: {compte_verifie.classe_comptable.enterprise_id}")
    else:
        print("‚ùå Compte non trouv√© apr√®s cr√©ation")
        
except Exception as e:
    print(f"‚ùå Erreur: {e}")
    import traceback
    traceback.print_exc()
