#!/usr/bin/env python3
"""
Test de la nouvelle configuration compl√®te des comptes par point de vente
"""
import sys
sys.path.insert(0, '.')

print("üß™ Test de la configuration des comptes par point de vente...")

try:
    from PyQt6.QtWidgets import QApplication
    
    app = QApplication(sys.argv)
    
    # Test des nouvelles m√©thodes du controller
    from ayanna_erp.modules.comptabilite.controller.comptabilite_controller import ComptabiliteController
    from ayanna_erp.database.database_manager import DatabaseManager
    
    try:
        controller = ComptabiliteController()
    except TypeError as e:
        print(f"   ‚ö†Ô∏è Erreur constructeur standard: {e}")
        print("   üîß Tentative avec session manuelle...")
        db = DatabaseManager()
        # Si le constructeur attend une session, on l'essaie
        try:
            controller = ComptabiliteController(db.get_session())
        except:
            # Sinon on cr√©e un objet avec les bonnes propri√©t√©s
            controller = ComptabiliteController()
            controller.session = db.get_session()
    
    # Test 1: R√©cup√©rer les points de vente
    print("üìç Test 1: R√©cup√©ration des points de vente...")
    pos_points = controller.get_pos_points(1)  # Enterprise ID 1
    print(f"   ‚úÖ Points de vente trouv√©s: {len(pos_points)}")
    for pos in pos_points:
        print(f"      - {pos.name} (ID: {pos.id})")
    
    # Test 2: R√©cup√©rer les comptes par classe
    print("\nüí∞ Test 2: R√©cup√©ration des comptes par classe...")
    classes_test = ['4', '5', '6', '7']
    for classe in classes_test:
        comptes = controller.get_comptes_par_classe(1, classe)
        print(f"   ‚úÖ Classe {classe}: {len(comptes)} comptes trouv√©s")
        for compte in comptes[:3]:  # Afficher les 3 premiers
            print(f"      - {compte.numero} - {compte.nom}")
    
    # Test 3: Configuration d'un point de vente
    if pos_points:
        print(f"\n‚öôÔ∏è Test 3: Configuration du point de vente '{pos_points[0].name}'...")
        pos_id = pos_points[0].id
        
        # R√©cup√©rer des comptes d'exemple
        comptes_classe_5 = controller.get_comptes_par_classe(1, '5')
        comptes_classe_4 = controller.get_comptes_par_classe(1, '4')
        comptes_classe_7 = controller.get_comptes_par_classe(1, '7')
        comptes_classe_6 = controller.get_comptes_par_classe(1, '6')
        
        if comptes_classe_5 and comptes_classe_4:
            # Configurer avec quelques comptes d'exemple
            controller.set_compte_config(
                enterprise_id=1,
                pos_id=pos_id,
                compte_caisse_id=comptes_classe_5[0].id if comptes_classe_5 else None,
                compte_banque_id=comptes_classe_5[1].id if len(comptes_classe_5) > 1 else None,
                compte_client_id=comptes_classe_4[0].id if comptes_classe_4 else None,
                compte_vente_id=comptes_classe_7[0].id if comptes_classe_7 else None,
                compte_achat_id=comptes_classe_6[0].id if comptes_classe_6 else None
            )
            print("   ‚úÖ Configuration enregistr√©e avec succ√®s")
            
            # Test 4: R√©cup√©ration de la configuration
            print("\nüìã Test 4: R√©cup√©ration de la configuration...")
            config = controller.get_compte_config(1, pos_id)
            if config:
                print(f"   ‚úÖ Configuration trouv√©e pour POS {pos_id}")
                print(f"      - Compte caisse: {config.compte_caisse_id}")
                print(f"      - Compte banque: {config.compte_banque_id}")
                print(f"      - Compte client: {config.compte_client_id}")
                print(f"      - Compte vente: {config.compte_vente_id}")
                print(f"      - Compte achat: {config.compte_achat_id}")
            else:
                print("   ‚ùå Configuration non trouv√©e")
        else:
            print("   ‚ö†Ô∏è Pas assez de comptes pour tester la configuration")
    else:
        print("   ‚ö†Ô∏è Aucun point de vente trouv√© pour tester")
    
    print("\n‚úÖ Tous les tests du controller r√©ussis!")
    
    # Test 5: Test du widget (sans l'afficher)
    print("\nüñºÔ∏è Test 5: Test du widget comptes...")
    from ayanna_erp.modules.comptabilite.widgets.comptes_widget import ComptesWidget
    
    class MockParent:
        def __init__(self):
            self.entreprise_id = 1
    
    parent = MockParent()
    widget = ComptesWidget(controller, None)  # On passe None pour √©viter l'erreur de parent QWidget
    widget.entreprise_id = 1
    widget.session = controller.session
    
    print("   ‚úÖ Widget cr√©√© avec succ√®s")
    print("   ‚úÖ M√©thodes disponibles:")
    print("      - open_config_dialog")
    print("      - _set_combo_value")
    
    print("\nüéâ Tous les tests r√©ussis! La configuration par point de vente est op√©rationnelle.")
    
except Exception as e:
    print(f"‚ùå Erreur dans le test: {e}")
    import traceback
    traceback.print_exc()
