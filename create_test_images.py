#!/usr/bin/env python3
"""
Cr√©er des images de test plus r√©alistes pour les produits
"""

import os
from PyQt6.QtWidgets import QApplication
from PyQt6.QtGui import QPixmap, QPainter, QColor, QFont, QBrush, QLinearGradient
from PyQt6.QtCore import Qt

def create_realistic_product_images():
    """Cr√©er plusieurs images de test r√©alistes"""
    app = QApplication([])  # N√©cessaire pour QPixmap
    
    try:
        # Cr√©er le dossier images s'il n'existe pas
        images_dir = os.path.join("data", "images", "produits")
        os.makedirs(images_dir, exist_ok=True)
        
        # Image 1: Produit √©lectronique (bleu)
        create_product_image(
            os.path.join(images_dir, "smartphone.png"),
            "üì±", "SMARTPHONE", 
            QColor("#3498DB"), QColor("#2980B9")
        )
        
        # Image 2: Produit alimentaire (vert)
        create_product_image(
            os.path.join(images_dir, "pomme.png"),
            "üçé", "POMME BIO", 
            QColor("#27AE60"), QColor("#229954")
        )
        
        # Image 3: V√™tement (violet)
        create_product_image(
            os.path.join(images_dir, "tshirt.png"),
            "üëï", "T-SHIRT", 
            QColor("#9B59B6"), QColor("#8E44AD")
        )
        
        # Image 4: Livre (orange)
        create_product_image(
            os.path.join(images_dir, "livre.png"),
            "üìö", "LIVRE", 
            QColor("#E67E22"), QColor("#D35400")
        )
        
        print("‚úÖ Images de test cr√©√©es avec succ√®s!")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation des images: {e}")
    finally:
        app.quit()

def create_product_image(filepath, emoji, text, color1, color2):
    """Cr√©er une image de produit avec d√©grad√© et emoji"""
    pixmap = QPixmap(200, 200)
    painter = QPainter(pixmap)
    
    # D√©grad√© de fond
    gradient = QLinearGradient(0, 0, 200, 200)
    gradient.setColorAt(0, color1)
    gradient.setColorAt(1, color2)
    painter.fillRect(pixmap.rect(), QBrush(gradient))
    
    # Emoji en grand
    painter.setPen(QColor("white"))
    font = QFont()
    font.setPointSize(48)
    painter.setFont(font)
    painter.drawText(50, 80, emoji)
    
    # Texte du produit
    font.setPointSize(14)
    font.setBold(True)
    painter.setFont(font)
    painter.drawText(pixmap.rect().adjusted(10, 120, -10, -20), Qt.AlignmentFlag.AlignCenter, text)
    
    painter.end()
    pixmap.save(filepath)
    print(f"üì∑ Image cr√©√©e: {filepath}")

if __name__ == "__main__":
    create_realistic_product_images()